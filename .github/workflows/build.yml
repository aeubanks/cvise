name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  CI:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        llvm: [11, 12, 13, 14]
        build-type: [DEBUG]
        docker: [opensuse/tumbleweed]
        include:
          - llvm: 14
            build-type: ASAN
            docker: opensuse/tumbleweed
          - llvm: 14
            build-type: UBSAN
            docker: opensuse/tumbleweed
          - llmv: 14
            build-type: RelWithDebInfo
            extra-flags: -flto=auto
            docker: opensuse/tumbleweed
          - llvm: 9
            build-type: DEBUG
            docker: opensuse/leap
            env: CC=gcc-11 CXX=g++-11
      fail-fast: false

    container:
      image: ${{ matrix.docker }}

    steps:
    - run: zypper -n install
        binutils clang${{ matrix.llvm }}-devel cmake flex gcc-c++ llvm${{ matrix.llvm }}-devel python3-Pebble python3-pytest unifdef python3-psutil curl git python3-chardet
        python3-flake8
        python3-flake8-builtins
        python3-flake8-bugbear
        python3-flake8-import-order
        python3-flake8-quotes
    - run: zypper -n install gcc11-c++
      if: matrix.docker == 'opensuse/leap'
    - run: zypper -n install python3-pip python3-flake8-comprehensions python3 sqlite-devel
      if: matrix.docker == 'opensuse/tumbleweed'
    - run: pip install pytest-cov
      if: matrix.docker == 'opensuse/tumbleweed'
    - uses: actions/checkout@v2
    - run: nproc
    - name: build
      run: |
            mkdir objdir
            cd objdir
            ${{ matrix.env }} cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCMAKE_CXX_FLAGS=${{ matrix.extra-flags }}
            make -j`nproc` VERBOSE=1
    - name: flake8
      run: flake8
    - name: test
      run: pytest
      workdir: objdir

  CI-LLVM-nightly:
    runs-on: ubuntu-22.04
    steps:
      - run: apt-get update
      - run: apt-get -qq install -y gcc g++ wget lsb-release wget software-properties-common gnupg git cmake flex python3-pebble python3-psutil python3-chardet python3-pytest vim unifdef
      - run: wget https://apt.llvm.org/llvm.sh
      - run: chmod +x llvm.sh
      - run: ./llvm.sh 16
      - run: apt-get install -y bolt-16 clang-16 libclang-common-16-dev libclang-16-dev mlir-16-tools llvm-16-tools libclang-common-16-dev libclang-16-dev libclang1-16 clang-format-16 python3-clang-16 clangd-16 clang-tidy-16
      # TODO: fix it
      - run: ln -s /usr/lib/x86_64-linux-gnu/libclang-16.so.16.0.0 /usr/lib/x86_64-linux-gnu/libclang-16.so.1
      - run: git clone https://github.com/marxin/cvise.git
      - run: mkdir cvise/objdir
      - run: WORKDIR cvise/objdir
      - run: cmake ..
        workdir: objdir
      - run: make -j`nproc` VERBOSE=1
        workdir: objdir
      - run: pytest
        workdir: objdir
